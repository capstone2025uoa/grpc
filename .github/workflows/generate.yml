name: Generate and Test gRPC Stubs

on:
  push:
    paths:
      - 'proto/**'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      ##################################################
      # 1) CHECK OUT REPO
      ##################################################
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      ##################################################
      # 2) GENERATE PYTHON STUBS
      ##################################################
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Python gRPC tools
        run: |
          pip install --upgrade pip
          pip install grpcio-tools

      - name: Create Python output directory
        run: mkdir -p ./generated/compsci399_grpc

      - name: Generate Python code
        run: |
          python -m grpc_tools.protoc \
            -I=./proto \
            --python_out=./generated/compsci399_grpc \
            --grpc_python_out=./generated/compsci399_grpc \
            ./proto/*.proto

      ##################################################
      # 3) GENERATE NODE.JS / TYPESCRIPT STUBS
      ##################################################
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install Node dev dependencies
        run: |
          npm install --global grpc-tools @grpc/proto-loader ts-protoc-gen

      - name: Create Node output directory
        run: mkdir -p ./generated/node

      - name: Generate Node stubs
        run: |
          grpc_tools_node_protoc \
            --plugin=protoc-gen-ts=$(which protoc-gen-ts) \
            --js_out=import_style=commonjs,binary:./generated/node \
            --ts_out=./generated/node \
            -I=./proto \
            ./proto/*.proto

      ##################################################
      # 4) GENERATE C# STUBS
      ##################################################
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install Protobuf compiler and C# gRPC tools
        id: install-tools
        run: |
          # Install protobuf compiler
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

          # Create a temporary project to install gRPC tools packages
          mkdir -p ./temp-project
          cd ./temp-project
          dotnet new console
          dotnet add package Grpc.Tools
          dotnet add package Google.Protobuf
          
          # Find the path to grpc_csharp_plugin in NuGet packages
          NUGET_DIR=~/.nuget/packages
          GRPC_TOOLS_VERSION=$(dotnet list package | grep Grpc.Tools | awk '{print $4}')
          TOOL_PATH="${NUGET_DIR}/grpc.tools/${GRPC_TOOLS_VERSION}/tools/linux_x64/grpc_csharp_plugin"
          
          if [ -f "$TOOL_PATH" ]; then
            echo "Found gRPC C# plugin at: $TOOL_PATH"
            chmod +x "$TOOL_PATH"
            # Set the output for other steps to use
            echo "plugin_path=$TOOL_PATH" >> "$GITHUB_OUTPUT"
          else
            echo "ERROR: Could not find grpc_csharp_plugin at expected path: $TOOL_PATH"
            echo "Searching for it in the NuGet packages directory..."
            find $NUGET_DIR -name "grpc_csharp_plugin" -type f
            exit 1
          fi
          
          cd ..

      - name: Create C# output directory
        run: mkdir -p ./generated/csharp

      - name: Generate C# code
        run: |
          protoc \
            --csharp_out=./generated/csharp \
            --grpc_out=./generated/csharp \
            --plugin=protoc-gen-grpc=${{ steps.install-tools.outputs.plugin_path }} \
            -I=./proto \
            ./proto/*.proto
          
          # Clean up temporary project
          rm -rf ./temp-project

      ##################################################
      # 5) COMMIT GENERATED FILES BACK TO REPO
      ##################################################
      - name: Commit generated files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update generated gRPC stubs [skip ci]"
          file_pattern: "generated/**"
